name: Trigger Jenkins Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  trigger-jenkins:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Trigger Jenkins Pipeline
      run: |
        echo "üöÄ D√©clenchement du pipeline Jenkins..."
        
        # Informations sur le commit
        echo "üìã Commit: ${{ github.sha }}"
        echo "üìã Branche: ${{ github.ref_name }}"
        echo "üìã Auteur: ${{ github.actor }}"
        
        # M√©thode 1: D√©clencher Jenkins via webhook GitHub standard
        if [ "${{ secrets.JENKINS_WEBHOOK_URL }}" != "" ]; then
          echo "üîó D√©clenchement via webhook GitHub..."
          curl -X POST "${{ secrets.JENKINS_WEBHOOK_URL }}/github-webhook/" \
            -H "Content-Type: application/json" \
            -H "X-GitHub-Event: push" \
            -d '{
              "ref": "${{ github.ref }}",
              "after": "${{ github.sha }}",
              "repository": {
                "clone_url": "${{ github.repositoryUrl }}",
                "full_name": "${{ github.repository }}"
              },
              "pusher": {
                "name": "${{ github.actor }}"
              }
            }' || echo "‚ö†Ô∏è Webhook GitHub standard √©chou√©"
        fi
        
        # M√©thode 2: D√©clencher Jenkins via API directe (fallback)
        if [ "${{ secrets.JENKINS_API_URL }}" != "" ] && [ "${{ secrets.JENKINS_API_TOKEN }}" != "" ]; then
          echo "üîó D√©clenchement via API Jenkins..."
          curl -X POST "${{ secrets.JENKINS_API_URL }}/job/${{ secrets.JENKINS_JOB_NAME }}/build" \
            --user "${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "parameter": [
                {"name": "BRANCH", "value": "${{ github.ref_name }}"},
                {"name": "COMMIT", "value": "${{ github.sha }}"}
              ]
            }' || echo "‚ö†Ô∏è API Jenkins non accessible"
        fi
        
        # M√©thode 3: Generic Webhook Trigger (si configur√©)
        if [ "${{ secrets.JENKINS_GENERIC_WEBHOOK_URL }}" != "" ]; then
          echo "üîó D√©clenchement via Generic Webhook..."
          curl -X POST "${{ secrets.JENKINS_GENERIC_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d '{
              "ref": "${{ github.ref }}",
              "branch": "${{ github.ref_name }}",
              "commit": "${{ github.sha }}",
              "repository": "${{ github.repository }}"
            }' || echo "‚ö†Ô∏è Generic Webhook non accessible"
        fi
        
        if [ "${{ secrets.JENKINS_WEBHOOK_URL }}" == "" ] && [ "${{ secrets.JENKINS_API_URL }}" == "" ] && [ "${{ secrets.JENKINS_GENERIC_WEBHOOK_URL }}" == "" ]; then
          echo "‚ÑπÔ∏è Aucune URL Jenkins configur√©e dans les secrets"
          echo "‚ÑπÔ∏è Configurez JENKINS_WEBHOOK_URL, JENKINS_API_URL ou JENKINS_GENERIC_WEBHOOK_URL"
        fi
        
        echo "‚úÖ D√©clenchement termin√©"

  notify:
    runs-on: ubuntu-latest
    needs: trigger-jenkins
    if: always()
    
    steps:
    - name: Notify Status
      run: |
        if [ "${{ needs.trigger-jenkins.result }}" == "success" ]; then
          echo "‚úÖ Pipeline Jenkins d√©clench√© avec succ√®s"
        else
          echo "‚ùå √âchec du d√©clenchement du pipeline Jenkins"
        fi